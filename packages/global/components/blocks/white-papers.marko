import queryFragment from "../../graphql/fragments/white-papers-block";

$ const queryParams = {
  limit: 1,
  queryFragment,
  sectionAlias: "white-papers",
  ...input.queryParams,
};

<marko-web-query|{ nodes }| name="website-scheduled-content" params=queryParams>
  <if(nodes.length)>
    $ const node = nodes[0];
    $ const blockName = "white-papers";

    <marko-web-block name=blockName>
      <marko-web-element block-name=blockName name="header">
        <marko-web-icon name="file" modifiers=[blockName] />
        White Papers
      </marko-web-element>

      <marko-web-node
        type=`${node.type}-content`
        card=true
        flush=true
        full-height=false
        modifiers=[blockName]
      >
        <@body>
          <@header>
            <@left modifiers=["company-name"]>
              <marko-web-content-name|{ value }| obj=node.company>
                Sponsored by ${value}
              </marko-web-content-name>
            </@left>
          </@header>
          <@title tag="h5">
            <marko-web-content-short-name tag=null obj=node link=true />
          </@title>
          <@text modifiers=["teaser"] show=(Boolean(node.teaser))>
            <marko-web-content-teaser tag=null obj=node link=true />
          </@text>
          <@footer modifiers=["buttons"]>
            <@left>
              <marko-web-link
                class=`btn btn-primary ${blockName}__download-btn`
                href=node.siteContext.path
                title="Download"
              >
                Download
              </marko-web-link>
              <marko-web-link
                class="btn btn-secondary"
                href="/white-papers"
                title="View All"
              >
                View All
              </marko-web-link>
            </@left>
          </@footer>
        </@body>
      </marko-web-node>
    </marko-web-block>
  </if>
</marko-web-query>
