
import createOmedaIdentityBuilder from "@parameter1/base-cms-marko-web-p1-events/utils/create-omeda-identity-builder";
import { getAsObject } from "@parameter1/base-cms-object-path";

$ const {
  site,
  req,
  nativeX,
  GAM,
  contentMeterState,
} = out.global;

$ const { cookies } = req;
$ const getCookieId = (value, type) => {
  if (!value) return null;
  const trimmed = `${value.replace(/^"/, '').replace(/"$/, '')}`.trim();
  if (type === 'anon') {
    return /^[a-z0-9-]{36}$/i.test(trimmed) ? trimmed : null;
  }
  if(type === 'enc') {
    return /^[a-z0-9]{15}$/i.test(trimmed) ? trimmed : null;
  }
  return null;
};
$ const omedaConfig = site.get('omeda');

$ const { gamDefer, gtmDefer } = req.query;

<marko-web-document ...input>
  <@head>
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="manifest" href="/site.webmanifest">
    <link rel="preconnect" href="https://www.googletagmanager.com">
    <link rel="preconnect" href="https://www.google-analytics.com">

    <link rel="preconnect" href="https://use.typekit.net" crossorigin>
    <link href="https://use.typekit.net/fuh2qel.css" rel="stylesheet" media="print" onload='this.onload=null,this.removeAttribute("media")'>
    <noscript>
      <link href="https://use.typekit.net/fuh2qel.css" rel="stylesheet">
    </noscript>

    <!-- init p1 website events -->
    <marko-web-p1-events-init
      on="load"
      request-frame=true
      target-tag="body"
      identity-query-builder=createOmedaIdentityBuilder(omedaConfig.brandKey)
      enable-gam-plugin=true
    />

    <!-- init gtm -->
    <marko-web-gtm-init
      container-id=site.get("gtm.containerId")
      request-frame=true
      target-tag="body"
      on=gtmDefer
    />

    <!-- init gam -->
    <!-- Push gamDeferOn prop to use in GTM in order to trigger googletags correctly -->
    <marko-web-gtm-push data={ gamDeferOn: "load"} />
    <marko-web-gam-init
      request-frame=true
      target-tag="body"
      on="load"
      init-only=true
    />

    <!-- init native-x -->
    <marko-web-native-x-init
      uri=nativeX.getUri()
      enabled=nativeX.isEnabled()
      on="load"
      request-frame=true
      target-tag="body"
    />

    <!-- init omeda olytics -->
    <marko-web-omeda-olytics-init
      oid="ff112876a6b04b67b48eb3a4496c54f7"
      on="load"
      request-frame=true
      target-tag="body"
    />

    <${input.head} />

    <marko-web-identity-x-context|{ hasUser, user }|>
      <if(hasUser && user.id)>
        <marko-web-gtm-push data={ user_id: user.id } />
      </if>
    </marko-web-identity-x-context>

    <!-- Send Encrypted Omeda Id to GTM -->
    $ const oylEncId = cookies.oly_enc_id ? getCookieId(cookies.oly_enc_id, 'enc') : undefined;
    <if(oylEncId)>
      <marko-web-gtm-push data={ oly_enc_id: oylEncId } />
    </if>
    <!-- Send Anonomouse Omeda Id to GTM -->
    $ const oylAnonId = cookies.oly_anon_id ? getCookieId(cookies.oly_anon_id, 'anon') : undefined;
    <if(oylAnonId)>
      <marko-web-gtm-push data={ oly_anon_id: oylAnonId } />
    </if>

    <!-- start gtm -->
    <marko-web-gtm-start />

    <!-- start gam -->
    <marko-web-gam-enable key-values=getAsObject(out.global, "gamTrackTargeting")>
      <@lazy-load ...site.getAsObject("gam.lazyLoad") />
    </marko-web-gam-enable>
    <marko-web-gam-targeting key-values={ uri: req.path } />
  </@head>
  <@above-wrapper>
    <marko-web-gtm-noscript container-id=site.get("gtm.containerId") />
    <${input.aboveWrapper} />
  </@above-wrapper>
  <@above-container>
    <marko-web-browser-component name="OmedaIdentityXRapidIdentify" />

    <marko-web-gtm-track-bus-event
      on="newsletter-form-action"
      clear-data=true
    />
    <marko-web-gtm-track-bus-event
      on="newsletter-form-subscription"
      clear-data=true
    />
    <marko-web-identity-x-context|{ hasUser, isEnabled }|>
      <theme-site-header has-user=hasUser reg-enabled=isEnabled use-idx-newsletter-signup=false />
      <theme-site-menu has-user=hasUser reg-enabled=isEnabled />
    </marko-web-identity-x-context>
    <if(contentMeterState && !contentMeterState.isLoggedIn)>
      <global-content-meter-block
        views=contentMeterState.views
        view-limit=contentMeterState.viewLimit
        display-overlay=contentMeterState.displayOverlay
        display-gate=contentMeterState.displayGate
      />
    </if>
    <${input.aboveContainer} />
  </@above-container>
  <@below-container>
    <${input.belowContainer} />
    <theme-site-footer use-idx-newsletter-signup=false />
  </@below-container>
</marko-web-document>
