@mixin skin-button($style) {
  $vars: map-get($skin-buttons, $style);
  $props: background-color, border-radius, color, font-family, font-weight, font-size, letter-spacing, line-height, padding, text-transform;

  @each $prop in $props {
    #{ $prop }: map-get($vars, $prop);
  }

  display: inline-block;
  text-align: center;
  vertical-align: middle;
  user-select: none;

  $border: map-get($vars, "border");
  @if $border {
    border: $border;
  } @else {
    border: none;
  }

  &:hover {
    $hover-border: map-get($vars, "hover-border");
    @if $hover-border {
      border: $hover-border;
    }
    color: map-get($vars, "hover-color");
    background-color: map-get($vars, "hover-background-color");
  }

  &:focus,
  &.focus {
    $focus-color: map-get($vars, "focus-color");
    $focus-background-color: map-get($vars, "focus-background-color");
    $focus-border: if(map-get($vars, "focus-border"), map-get($vars, "focus-border"), map-get($vars, "hover-border"));
    @if $focus-border {
      border: $focus-border;
    }
    color: if($focus-color, $focus-color, map-get($vars, "hover-color"));
    background-color: if($focus-background-color, $focus-background-color, map-get($vars, "hover-background-color"));
    outline: 0;
  }

  &.disabled,
  &:disabled {
    opacity: $btn-disabled-opacity;
  }

}

@mixin skin-typography($style, $link-style: false) {
  $vars: map-get($typography, $style);
  $props: font-family, font-size, font-weight, line-height, color, text-transform, letter-spacing;

  @each $prop in $props {
    #{ $prop }: map-get($vars, $prop);
  }

  @include theme-apply-responsive-fonts(
    $font-size: map-get($vars, font-size-mobile),
    $line-height: map-get($vars, line-height-mobile),
    $breakpoint: $theme-responsive-text-breakpoint
  );

  @if $link-style {
    $link: map-deep-get($typography-links, $style, $link-style);
    a {
      @include skin-typography-link($style, $link-style);
    }
  }
}

@mixin skin-typography-link($style, $link-style) {
  $vars: map-get($typography, $style);
  $link: map-deep-get($typography-links, $style, $link-style);

  @if map-get($link, max-lines) {
    @include theme-max-lines(
      $font-size: map-get($vars, font-size),
      $font-size-sm: map-get($vars, font-size-mobile),
      $line-height: map-get($vars, line-height),
      $line-height-sm: map-get($vars, line-height-mobile),
      $num: map-get($link, max-lines),
      $breakpoint: $theme-responsive-text-breakpoint
    );
  }

  $link-color: map-get($link, "color");
  color: if($link-color, $link-color, map-get($vars, "color"));
  text-decoration: map-get($link, text-decoration);
  &:hover {
    color: map-get($link, "hover-color");
    text-decoration: map-get($link, hover-text-decoration);
  }
}

@mixin section-header-underline() {
  margin-bottom: 30px;

  @include skin-typography($style: "section-header");
}

@mixin skin-node-fonts(
  $font-size,
  $font-size-sm,
  $line-height,
  $line-height-sm,
  $font-family: $skin-font-family-primary,
  $max-lines: 3
) {
  font-family: $font-family;
  font-size: $font-size;
  line-height: $line-height;

  @include theme-apply-responsive-fonts(
    $font-size: $font-size-sm,
    $line-height: $line-height-sm,
    $breakpoint: $theme-responsive-text-breakpoint
  );

  a {
    @include theme-max-lines(
      $font-size: $font-size,
      $font-size-sm: $font-size-sm,
      $line-height: $line-height,
      $line-height-sm: $line-height-sm,
      $num: $max-lines,
      $breakpoint: $theme-responsive-text-breakpoint
    );
  }
}

@mixin skin-fonts-xl-md() {
  @include skin-node-fonts(
    $font-size: $skin-node-text-font-size-xl,
    $line-height: $skin-node-text-line-height-xl,

    $font-size-sm: $skin-node-text-font-size-md,
    $line-height-sm: $skin-node-text-line-height-md,
  );
}

@mixin skin-fonts-lg-lg() {
  @include skin-node-fonts(
    $font-size: $skin-node-text-font-size-lg,
    $line-height: $skin-node-text-line-height-lg,

    $font-size-sm: $skin-node-text-font-size-lg,
    $line-height-sm: $skin-node-text-line-height-lg,
  );
}

@mixin skin-fonts-lg-md() {
  @include skin-node-fonts(
    $font-size: $skin-node-text-font-size-lg,
    $line-height: $skin-node-text-line-height-lg,

    $font-size-sm: $skin-node-text-font-size-md,
    $line-height-sm: $skin-node-text-line-height-md,
  );
}

@mixin skin-fonts-md-md() {
  @include skin-node-fonts(
    $font-size: $skin-node-text-font-size-md,
    $line-height: $skin-node-text-line-height-md,

    $font-size-sm: $skin-node-text-font-size-md,
    $line-height-sm: $skin-node-text-line-height-md,
  );
}

@mixin skin-fonts-md-none() {
  @include skin-node-fonts(
    $font-size: $skin-node-text-font-size-md,
    $line-height: $skin-node-text-line-height-md,

    $font-size-sm: $skin-node-text-font-size-md,
    $line-height-sm: $skin-node-text-line-height-md,
  );
  @include media-breakpoint-down($theme-responsive-text-breakpoint) {
    display: none;
  }
}
