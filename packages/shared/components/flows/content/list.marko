import { getAsArray, getAsObject } from "@base-cms/object-path";
import defaultValue from "@base-cms/marko-core/utils/default-value";

$ const { nativeX: nxConfig } = out.global;
$ const nodes = getAsArray(input, "nodes");
$ const nativeX = getAsObject(input, "nativeX");

<marko-web-node-list
  inner-justified=defaultValue(input.innerJustified, true)
  class=input.class
  flush-x=defaultValue(input.flushX, false)
  flush-y=defaultValue(input.flushY, false)
  modifiers=input.modifiers
  header=input.header
  body=input.body
>
  <@nodes nodes=nodes>
    <@slot|{ node, index }|>
      <if(nxConfig)>
        <marko-web-native-x-render|{ node: nxNode, linkAttrs, containerAttrs }|
          ...nativeX
          when=(index === nativeX.index)
          node=node
          config=nxConfig
        >
          <shared-content-list-node
            ...input.node
            node=nxNode
            attrs=containerAttrs
            link-attrs=linkAttrs
          />
        </marko-web-native-x-render>
      </if>
      <else>
        <shared-content-list-node
          ...input.node
          node=node
        />
      </else>
    </@slot>
  </@nodes>
</marko-web-node-list>
