import defaultDescription from "@base-cms/marko-web/utils/published-content/description";
import defaultValue from "@base-cms/marko-core/utils/default-value";
import { isFunction } from "@base-cms/utils";
import queryFragment from "../../../graphql/fragments/content-list";

$ const { config, GAM } = out.global;
$ const { id, alias, name, pageNode } = input;
$ const description = defaultDescription(name, config);

$ const adSlots = isFunction(input.adSlots) ? input.adSlots : ({ aliases }) => ({
  "gpt-ad-lb1": GAM.getAdUnit({ name: "lb1", aliases }),
});

<shared-website-section-page-default-layout
  id=id
  alias=alias
  name=name
  page-node=pageNode
  ad-slots=adSlots
>
  <@page>
    <shared-gam-display-ad id="gpt-ad-lb1" modifiers=["top-of-page"] />

    <marko-web-resolve-page|{ data: section }| node=pageNode>
      <marko-web-page-wrapper class="mb-block">
        <@section>
          <div class="row">
            <div class="col">
              <default-theme-breadcrumbs-with-home>
                <@item>${name}</@item>
              </default-theme-breadcrumbs-with-home>
              <h1 class="page-wrapper__title">${name}</h1>
              <div class="page-wrapper__deck">${defaultValue(section.description, description)}</div>
            </div>
          </div>
        </@section>
      </marko-web-page-wrapper>
    </marko-web-resolve-page>

    <div class="row">
      <div class="col">
        <marko-web-query|{ nodes }| name="website-scheduled-content" params={ sectionId: id, limit: 18, queryFragment }>
          <shared-content-list-flow ...input.listFlow nodes=nodes />
        </marko-web-query>
      </div>
    </div>
  </@page>

  <@below-page>
    <shared-scheduled-content-load-more-block name="list" section-id=id>
      <@query-params limit=18 skip=18 />
      <@component-input ...input.listFlow />
    </shared-scheduled-content-load-more-block>
  </@below-page>
</shared-website-section-page-default-layout>
