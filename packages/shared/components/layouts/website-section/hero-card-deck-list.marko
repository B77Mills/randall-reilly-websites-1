import { getAsObject, getAsArray } from "@base-cms/object-path";
import hierarchyAliases from "@base-cms/marko-web/utils/hierarchy-aliases";
import { isFunction } from "@base-cms/utils";
import queryFragment from "../../../graphql/fragments/content-list";

$ const { GAM } = out.global;
$ const { id, alias, name, pageNode } = input;
$ const adSlots = isFunction(input.adSlots) ? input.adSlots : ({ aliases }) => ({
  "gpt-ad-lb1": GAM.getAdUnit({ name: "lb1", aliases }),
});

$ const loadMore = {
  queryParams: { limit: 14, skip: 19 },
  ...getAsObject(input, "loadMore"),
};

<shared-website-section-page-default-layout
  id=id
  alias=alias
  name=input.name
  page-node=input.pageNode
  ad-slots=adSlots
  load-more=loadMore
>
  <@page>
    <shared-content-hero-block id=id />

    <shared-gam-display-ad id="gpt-ad-lb1" modifiers=["top-of-page"] />

    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);

      <marko-web-query|{ nodes }|
        name="website-scheduled-content"
        params={ sectionId: id, limit: 14, skip: 5, queryFragment }
      >
        <shared-content-card-deck-list-flow nodes=nodes>
          <@card-deck>
            <@adunit aliases=aliases />
            <@native-x index=2 name="default" aliases=aliases />
          </@card-deck>
          <@list>
            <@adunit aliases=aliases />
            <@native-x index=2 name="default" aliases=aliases />
          </@list>
        </shared-content-card-deck-list-flow>
      </marko-web-query>
    </marko-web-resolve-page>
  </@page>
</shared-website-section-page-default-layout>
